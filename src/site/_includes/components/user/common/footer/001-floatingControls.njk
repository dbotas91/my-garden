<aside id="floating-control">
  <a href="https://dariobotas.github.io" target="_blank" title="Terminal" rel="noopener">
    <i icon-name="github" title="Terminal" aria-hidden="true"></i>
  </a>
  <span id="theme-change">
    <i class="svg-icon light" icon-name="sun" aria-hidden="true"></i>
    <i class="svg-icon dark" icon-name="moon" aria-hidden="true"></i>
    <i class="svg-icon auto" icon-name="sun-moon" aria-hidden="true"></i>
  </span>
</aside>

<script>
  // Helper: apply classes to body and #theme-change
  function applyThemeClasses(theme) {
    const span = document.getElementById('theme-change');
    // Normalize
    const allowed = ['dark', 'light', 'auto'];
    if (!allowed.includes(theme)) theme = 'light';

    // Update span classes (keep only one of dark/light/auto)
    span.classList.remove('dark', 'light', 'auto');
    span.classList.add(theme);

    // Update body classes
    document.body.classList.remove('theme-dark', 'theme-light');

    if (theme === 'dark') {
      document.body.classList.add('theme-dark');
    } else if (theme === 'light') {
      document.body.classList.add('theme-light');
    } else {
      // auto: resolve via media query, do NOT persist resolved class on span (keep 'auto')
      const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
      document.body.classList.add(prefersDark ? 'theme-dark' : 'theme-light');
    }

    // Track current theme choice (dark/light/auto)
    window.theme = theme;
  }

  // Main: set theme, optionally update icons (if you have icon logic)
  function setTheme(theme) {
    applyThemeClasses(theme);
  }

  // Initialize from localStorage or default to 'light'
  let stored = window.localStorage.getItem('site-theme');
  if (!stored) stored = 'dark';
  setTheme(stored);
  window.localStorage.setItem('site-theme', stored);

  // React to system preference changes only when in auto
  const media = window.matchMedia('(prefers-color-scheme: dark)');
  media.addEventListener('change', function() {
    const settings = window.localStorage.getItem('site-theme');
    if (settings === 'auto') {
      // Re-apply auto to reflect new system preference
      setTheme('auto');
    }
  });

  // Click to cycle: auto → dark → light → auto
  document.getElementById('theme-change').addEventListener('click', function() {
    let next;
    if (window.theme === 'auto') {
      next = 'dark';
    } else if (window.theme === 'dark') {
      next = 'light';
    } else {
      next = 'auto';
    }
    setTheme(next);
    window.localStorage.setItem('site-theme', next);
  });
</script>


<!-- <aside id="floating-control">
  <a href="https://dariobotas.github.io" target="_blank" title="Terminal">
    <i icon-name="github" title="Terminal" aria-hidden="true"></i>
  </a>
  <span id="theme-change">
    <i class="svg-icon light" icon-name="sun" aria-hidden="true"></i>
    <i class="svg-icon dark" icon-name="moon" aria-hidden="true"></i>
    <i class="svg-icon auto" icon-name="sun-moon" aria-hidden="true"></i>
  </span>
</aside>

  <script>
      function setTheme(theme) {
          let toAdd;
          switch (theme) {
              case 'dark':
                  toRemove = ['auto', 'light'];
                  break;
              case 'light':
                  toAdd = 'fa-adjust':
                  toRemove = ['dark', 'auto'];
                  break;  
              default:
                  toRemove = ['dark', 'light'];
                  break;
          }
          document.getElementById('theme-change').classList.add(theme);
          document.getElementById('theme-change').classList.remove(...toRemove);
      }
      function setTheme(theme, setIcon) {
        if (setIcon) {
            setThemeIcon(theme);
        }
        if (theme == 'dark') {
            document.body.classList.remove('theme-light');
            document.body.classList.add('theme-dark');
        } else if (theme == "light") {
            document.body.classList.add('theme-light');
            document.body.classList.remove('theme-dark');
        } else {
            theme = (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) ? 'dark' : 'light';
            setTheme(theme, false);
        }
        
    }
    let theme = window.localStorage.getItem('site-theme') || "light";
    setTheme(theme, true);
    window.theme = theme;
    window.localStorage.setItem('site-theme', theme);

    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(event) {
        const settings = window.localStorage.getItem('site-theme');
        if (!settings || settings == "auto") {
            window.localStorage.setItem('site-theme', "auto");
            setTheme("auto", true);
        }
    });
    document.getElementById('theme-change').addEventListener('click', function() {
        let theme;
        if (window.theme == 'auto') {
            theme = "dark";
        } else if (window.theme == 'dark') {
            theme = 'light'
        } else {
            theme = 'auto';
        }
        setTheme(theme, true);
        window.localStorage.setItem('site-theme', theme);
        window.theme = theme;
    })
</script>            
-->
